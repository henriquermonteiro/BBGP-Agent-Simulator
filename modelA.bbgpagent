=> beOperative(me)
=> hasFractBone(man_32)
=> fractBoneIs(man_32, arm)
=> askedForHelp(p2, p6)
=> openFracture(man_32)
=> !available(bed,Y)
=> newSupply(bed)
=> supportWeight(man_32) 

newSupply(X) -> available(X, Y)
hasFractBone(X) => injuredSevere(X)
fractBoneIs(X, arm) => !injuredSevere(X)
openFracture(X) -> injuredSevere(X) 

act1 : injuredSevere(X) -> takeHospital(G, X)
act2 : !injuredSevere(X) -> sendShelter(G, X)
act3 : askedForHelp(X, Y) => go(G, X, Y) 

!supportWeight(X) -> !takeHospital(G, X)
!available(bed, X) -> !takeHospital(G, X)
rescued(X) -> !takeHospital(G, X)
rescued(X) -> !sendShelter(G, X) 


act3 < act2 < act1

res : battery,80.0 
res : oil , 70.0

go(G,X,Y) :- beOperative(me), res : battery,50.0 $ -askedForHelp(X, Y), -res:battery,50.0
takeHospital(G,X) :- beOperative(me), res:battery,40.0 $ -res:battery,40.0 , +rescued(X)
sendShelter(G,X) :- beOperative(me), res:battery,5.0 $ - res:battery,5.0 , +rescued(X)